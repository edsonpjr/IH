`timescale 1ps/1ps

module Unidade_Processamento();
logic clk;
logic nrst;
logic [63:0]pc;
logic [63:0]OUT;
reg Wr;
reg [31:0]rdaddress;
reg [31:0]wdaddress;
reg [31:0]data;
wire [31:0]q;

reg [4:0]rs1;	//[19..15]
reg [4:0]rs2;	//[24..20]
reg [4:0]rd;	//[11..7]
reg [6:0]opcode; //[6..0]
reg [31:0]instruction; //[31..0]

logic loadPC;

reg[63:0] inA;
reg[63:0] inB;
reg[63:0] outA;
reg[63:0] outB;
reg[63:0] resetA;
reg[63:0] resetB;

UC maquina_estados(.PC(pc), .LOAD(loadPC));

register PC(.clk(clk), .reset(nrst), .regWrite(loadPC), .DadoIn(pc), .DadoOut(rdaddress));

register A(.clk(clk), .reset(resetA), .regWrite(loadA), .DadoIn(inA), .DadoOut(outB));

register B(.clk(clk), .reset(resetB), .regWrite(loadB), .DadoIn(inA), .DadoOut(outB));



Memoria32 meminst (.raddress(rdaddress), .waddress(wdaddress),
		.Clk(clk), .Datain(data), .Dataout(q), .Wr(Wr) );


Instr_Reg_RISC_V reginstr(.Load_ir(loadPC), .Reset(nrst),
		.Clk(clk), .Entrada(q), .Instr19_15(rs1), .Instr24_20(rs2), .Instr11_7(rd), .Instr6_0(opcode), .Instr31_0(instruction)); 

localparam CLKPERIOD = 10000;
localparam CLKDELAY = CLKPERIOD / 2;

initial begin
	clk = 1'b1;
	nrst = 1'b1;
	loadPC = 1'b1;
	#(CLKPERIOD)
	#(CLKPERIOD)
	#(CLKPERIOD)
	nrst = 1'b0;
end

always #(CLKDELAY) clk = ~clk;



endmodule
